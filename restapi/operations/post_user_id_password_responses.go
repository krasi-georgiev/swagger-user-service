// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vanderbr/choicehealth_user-service/models"
)

// PostUserIDPasswordOKCode is the HTTP code returned for type PostUserIDPasswordOK
const PostUserIDPasswordOKCode int = 200

/*PostUserIDPasswordOK Generic Ok Response - it returns a custom code and message depending on the reply context

swagger:response postUserIdPasswordOK
*/
type PostUserIDPasswordOK struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewPostUserIDPasswordOK creates PostUserIDPasswordOK with default headers values
func NewPostUserIDPasswordOK() *PostUserIDPasswordOK {
	return &PostUserIDPasswordOK{}
}

// WithPayload adds the payload to the post user Id password o k response
func (o *PostUserIDPasswordOK) WithPayload(payload *models.Response) *PostUserIDPasswordOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post user Id password o k response
func (o *PostUserIDPasswordOK) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUserIDPasswordOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUserIDPasswordUnauthorizedCode is the HTTP code returned for type PostUserIDPasswordUnauthorized
const PostUserIDPasswordUnauthorizedCode int = 401

/*PostUserIDPasswordUnauthorized Authentication is missing or invalid

swagger:response postUserIdPasswordUnauthorized
*/
type PostUserIDPasswordUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewPostUserIDPasswordUnauthorized creates PostUserIDPasswordUnauthorized with default headers values
func NewPostUserIDPasswordUnauthorized() *PostUserIDPasswordUnauthorized {
	return &PostUserIDPasswordUnauthorized{}
}

// WithPayload adds the payload to the post user Id password unauthorized response
func (o *PostUserIDPasswordUnauthorized) WithPayload(payload *models.Response) *PostUserIDPasswordUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post user Id password unauthorized response
func (o *PostUserIDPasswordUnauthorized) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUserIDPasswordUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostUserIDPasswordDefault Generic Error used for most error responses - it returns a custom code and message depending on the reply context

swagger:response postUserIdPasswordDefault
*/
type PostUserIDPasswordDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewPostUserIDPasswordDefault creates PostUserIDPasswordDefault with default headers values
func NewPostUserIDPasswordDefault(code int) *PostUserIDPasswordDefault {
	if code <= 0 {
		code = 500
	}

	return &PostUserIDPasswordDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post user ID password default response
func (o *PostUserIDPasswordDefault) WithStatusCode(code int) *PostUserIDPasswordDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post user ID password default response
func (o *PostUserIDPasswordDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post user ID password default response
func (o *PostUserIDPasswordDefault) WithPayload(payload *models.Response) *PostUserIDPasswordDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post user ID password default response
func (o *PostUserIDPasswordDefault) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUserIDPasswordDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
