// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vanderbr/choicehealth_user-service/models"
)

// PutUserRoleIDOKCode is the HTTP code returned for type PutUserRoleIDOK
const PutUserRoleIDOKCode int = 200

/*PutUserRoleIDOK Generic Ok Response - it returns a custom code and message depending on the reply context

swagger:response putUserRoleIdOK
*/
type PutUserRoleIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewPutUserRoleIDOK creates PutUserRoleIDOK with default headers values
func NewPutUserRoleIDOK() *PutUserRoleIDOK {
	return &PutUserRoleIDOK{}
}

// WithPayload adds the payload to the put user role Id o k response
func (o *PutUserRoleIDOK) WithPayload(payload *models.Response) *PutUserRoleIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put user role Id o k response
func (o *PutUserRoleIDOK) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUserRoleIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PutUserRoleIDDefault Generic Error used for most error responses - it returns a custom code and message depending on the reply context

swagger:response putUserRoleIdDefault
*/
type PutUserRoleIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewPutUserRoleIDDefault creates PutUserRoleIDDefault with default headers values
func NewPutUserRoleIDDefault(code int) *PutUserRoleIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PutUserRoleIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put user role ID default response
func (o *PutUserRoleIDDefault) WithStatusCode(code int) *PutUserRoleIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put user role ID default response
func (o *PutUserRoleIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put user role ID default response
func (o *PutUserRoleIDDefault) WithPayload(payload *models.Response) *PutUserRoleIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put user role ID default response
func (o *PutUserRoleIDDefault) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUserRoleIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
