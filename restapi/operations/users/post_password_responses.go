// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/choicehealth/user-service/models"
)

// PostPasswordOKCode is the HTTP code returned for type PostPasswordOK
const PostPasswordOKCode int = 200

/*PostPasswordOK shows a message if the password was set or sent with an email reminder.

swagger:response postPasswordOK
*/
type PostPasswordOK struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewPostPasswordOK creates PostPasswordOK with default headers values
func NewPostPasswordOK() *PostPasswordOK {
	return &PostPasswordOK{}
}

// WithPayload adds the payload to the post password o k response
func (o *PostPasswordOK) WithPayload(payload *models.Response) *PostPasswordOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post password o k response
func (o *PostPasswordOK) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostPasswordOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostPasswordDefault Unexpected error

swagger:response postPasswordDefault
*/
type PostPasswordDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewPostPasswordDefault creates PostPasswordDefault with default headers values
func NewPostPasswordDefault(code int) *PostPasswordDefault {
	if code <= 0 {
		code = 500
	}

	return &PostPasswordDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post password default response
func (o *PostPasswordDefault) WithStatusCode(code int) *PostPasswordDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post password default response
func (o *PostPasswordDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post password default response
func (o *PostPasswordDefault) WithPayload(payload *models.Response) *PostPasswordDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post password default response
func (o *PostPasswordDefault) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostPasswordDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
