// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vanderbr/choicehealth_user-service/models"
)

// PostUserPasswordOKCode is the HTTP code returned for type PostUserPasswordOK
const PostUserPasswordOKCode int = 200

/*PostUserPasswordOK user updated

swagger:response postUserPasswordOK
*/
type PostUserPasswordOK struct {
}

// NewPostUserPasswordOK creates PostUserPasswordOK with default headers values
func NewPostUserPasswordOK() *PostUserPasswordOK {
	return &PostUserPasswordOK{}
}

// WriteResponse to the client
func (o *PostUserPasswordOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
}

// PostUserPasswordUnauthorizedCode is the HTTP code returned for type PostUserPasswordUnauthorized
const PostUserPasswordUnauthorizedCode int = 401

/*PostUserPasswordUnauthorized Authentication is missing or invalid

swagger:response postUserPasswordUnauthorized
*/
type PostUserPasswordUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewPostUserPasswordUnauthorized creates PostUserPasswordUnauthorized with default headers values
func NewPostUserPasswordUnauthorized() *PostUserPasswordUnauthorized {
	return &PostUserPasswordUnauthorized{}
}

// WithPayload adds the payload to the post user password unauthorized response
func (o *PostUserPasswordUnauthorized) WithPayload(payload *models.Response) *PostUserPasswordUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post user password unauthorized response
func (o *PostUserPasswordUnauthorized) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUserPasswordUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUserPasswordNotFoundCode is the HTTP code returned for type PostUserPasswordNotFound
const PostUserPasswordNotFoundCode int = 404

/*PostUserPasswordNotFound Resource not found

swagger:response postUserPasswordNotFound
*/
type PostUserPasswordNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewPostUserPasswordNotFound creates PostUserPasswordNotFound with default headers values
func NewPostUserPasswordNotFound() *PostUserPasswordNotFound {
	return &PostUserPasswordNotFound{}
}

// WithPayload adds the payload to the post user password not found response
func (o *PostUserPasswordNotFound) WithPayload(payload *models.Response) *PostUserPasswordNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post user password not found response
func (o *PostUserPasswordNotFound) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUserPasswordNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostUserPasswordDefault Unexpected error

swagger:response postUserPasswordDefault
*/
type PostUserPasswordDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewPostUserPasswordDefault creates PostUserPasswordDefault with default headers values
func NewPostUserPasswordDefault(code int) *PostUserPasswordDefault {
	if code <= 0 {
		code = 500
	}

	return &PostUserPasswordDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post user password default response
func (o *PostUserPasswordDefault) WithStatusCode(code int) *PostUserPasswordDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post user password default response
func (o *PostUserPasswordDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post user password default response
func (o *PostUserPasswordDefault) WithPayload(payload *models.Response) *PostUserPasswordDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post user password default response
func (o *PostUserPasswordDefault) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUserPasswordDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
