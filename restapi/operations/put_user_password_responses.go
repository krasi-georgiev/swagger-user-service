// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vanderbr/choicehealth_user-service/models"
)

// PutUserPasswordOKCode is the HTTP code returned for type PutUserPasswordOK
const PutUserPasswordOKCode int = 200

/*PutUserPasswordOK put user password o k

swagger:response putUserPasswordOK
*/
type PutUserPasswordOK struct {
}

// NewPutUserPasswordOK creates PutUserPasswordOK with default headers values
func NewPutUserPasswordOK() *PutUserPasswordOK {
	return &PutUserPasswordOK{}
}

// WriteResponse to the client
func (o *PutUserPasswordOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
}

// PutUserPasswordUnauthorizedCode is the HTTP code returned for type PutUserPasswordUnauthorized
const PutUserPasswordUnauthorizedCode int = 401

/*PutUserPasswordUnauthorized Authentication is missing or invalid

swagger:response putUserPasswordUnauthorized
*/
type PutUserPasswordUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewPutUserPasswordUnauthorized creates PutUserPasswordUnauthorized with default headers values
func NewPutUserPasswordUnauthorized() *PutUserPasswordUnauthorized {
	return &PutUserPasswordUnauthorized{}
}

// WithPayload adds the payload to the put user password unauthorized response
func (o *PutUserPasswordUnauthorized) WithPayload(payload *models.Response) *PutUserPasswordUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put user password unauthorized response
func (o *PutUserPasswordUnauthorized) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUserPasswordUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PutUserPasswordDefault Unexpected error

swagger:response putUserPasswordDefault
*/
type PutUserPasswordDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewPutUserPasswordDefault creates PutUserPasswordDefault with default headers values
func NewPutUserPasswordDefault(code int) *PutUserPasswordDefault {
	if code <= 0 {
		code = 500
	}

	return &PutUserPasswordDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put user password default response
func (o *PutUserPasswordDefault) WithStatusCode(code int) *PutUserPasswordDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put user password default response
func (o *PutUserPasswordDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put user password default response
func (o *PutUserPasswordDefault) WithPayload(payload *models.Response) *PutUserPasswordDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put user password default response
func (o *PutUserPasswordDefault) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUserPasswordDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
